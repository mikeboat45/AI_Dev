{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mkboa/AI_Dev/Polling-App-Project/polling-app-project/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Card = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\r\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLHeadingElement>\r\n>(({ className, ...props }, ref) => (\r\n  <h3\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-2xl font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n))\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<\r\n  HTMLParagraphElement,\r\n  React.HTMLAttributes<HTMLParagraphElement>\r\n>(({ className, ...props }, ref) => (\r\n  <p\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n))\r\nCardContent.displayName = \"CardContent\"\r\n\r\nconst CardFooter = React.forwardRef<\r\n  HTMLDivElement,\r\n  React.HTMLAttributes<HTMLDivElement>\r\n>(({ className, ...props }, ref) => (\r\n  <div\r\n    ref={ref}\r\n    className={cn(\"flex items-center p-6 pt-0\", className)}\r\n    {...props}\r\n  />\r\n))\r\nCardFooter.displayName = \"CardFooter\"\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\r\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;;;;AAEA,MAAM,qBAAO,mNAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,mNAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,mNAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,mNAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,mNAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mkboa/AI_Dev/Polling-App-Project/polling-app-project/src/lib/api.ts"],"sourcesContent":["import { Poll, CreatePollData, VoteData, AuthResponse, User } from \"@/types/poll\"\n\nconst API_BASE_URL = typeof window === 'undefined' ? 'http://localhost:3000/api' : '/api'\n\nclass ApiError extends Error {\n  constructor(public status: number, message: string) {\n    super(message)\n    this.name = 'ApiError'\n  }\n}\n\nasync function apiRequest<T>(\n  endpoint: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const url = `${API_BASE_URL}${endpoint}`\n  \n  const headers: HeadersInit = {\n    'Content-Type': 'application/json',\n    ...options.headers,\n  }\n\n  const config: RequestInit = {\n    ...options,\n    headers,\n  }\n\n  const response = await fetch(url, config)\n  \n  if (!response.ok) {\n    const errorBody = await response.text()\n    try {\n      const errorJson = JSON.parse(errorBody)\n      throw new ApiError(response.status, errorJson.message || `API request failed: ${response.statusText}`)\n    } catch {\n      throw new ApiError(response.status, `API request failed: ${response.statusText} - ${errorBody}`)\n    }\n  }\n\n  // Handle cases where response might be empty\n  const text = await response.text()\n  try {\n    return JSON.parse(text) as T\n  } catch (e) {\n    // If parsing fails, and text is empty, return null or an empty object\n    // depending on what the caller expects. For a POST that returns nothing, this is fine.\n    if (text === '') {\n      return null as T\n    }\n    throw new Error(`Failed to parse JSON response: ${e}`)\n  }\n}\n\n// Authentication API\nexport const authApi = {\n  login: async (email: string, password: string): Promise<AuthResponse> => {\n    return apiRequest<AuthResponse>('/auth/login', {\n      method: 'POST',\n      body: JSON.stringify({ email, password }),\n    })\n  },\n\n  register: async (name: string, email: string, password: string): Promise<AuthResponse> => {\n    return apiRequest<AuthResponse>('/auth/register', {\n      method: 'POST',\n      body: JSON.stringify({ name, email, password }),\n    })\n  },\n\n  logout: async (): Promise<void> => {\n    return apiRequest<void>('/auth/logout', {\n      method: 'POST',\n    })\n  },\n\n  getCurrentUser: async (): Promise<User> => {\n    return apiRequest<User>('/auth/me', {})\n  },\n}\n\n// Polls API\nexport const pollsApi = {\n  getAll: async (): Promise<Poll[]> => {\n    return apiRequest<Poll[]>('/polls')\n  },\n\n  create: async (pollData: CreatePollData): Promise<Poll> => {\n    return apiRequest<Poll>('/polls', {\n      method: 'POST',\n      body: JSON.stringify(pollData),\n    })\n  },\n\n  vote: async (voteData: VoteData): Promise<Poll> => {\n    return apiRequest<Poll>('/polls/vote', {\n      method: 'POST',\n      body: JSON.stringify(voteData),\n    })\n  },\n}\n\n\n"],"names":[],"mappings":";;;;;;AAEA,MAAM,eAAe,uCAAgC,8BAA8B;AAEnF,MAAM,iBAAiB;;IACrB,YAAY,AAAO,MAAc,EAAE,OAAe,CAAE;QAClD,KAAK,CAAC,eADW,SAAA;QAEjB,IAAI,CAAC,IAAI,GAAG;IACd;AACF;AAEA,eAAe,WACb,QAAgB,EAChB,UAAuB,CAAC,CAAC;IAEzB,MAAM,MAAM,GAAG,eAAe,UAAU;IAExC,MAAM,UAAuB;QAC3B,gBAAgB;QAChB,GAAG,QAAQ,OAAO;IACpB;IAEA,MAAM,SAAsB;QAC1B,GAAG,OAAO;QACV;IACF;IAEA,MAAM,WAAW,MAAM,MAAM,KAAK;IAElC,IAAI,CAAC,SAAS,EAAE,EAAE;QAChB,MAAM,YAAY,MAAM,SAAS,IAAI;QACrC,IAAI;YACF,MAAM,YAAY,KAAK,KAAK,CAAC;YAC7B,MAAM,IAAI,SAAS,SAAS,MAAM,EAAE,UAAU,OAAO,IAAI,CAAC,oBAAoB,EAAE,SAAS,UAAU,EAAE;QACvG,EAAE,OAAM;YACN,MAAM,IAAI,SAAS,SAAS,MAAM,EAAE,CAAC,oBAAoB,EAAE,SAAS,UAAU,CAAC,GAAG,EAAE,WAAW;QACjG;IACF;IAEA,6CAA6C;IAC7C,MAAM,OAAO,MAAM,SAAS,IAAI;IAChC,IAAI;QACF,OAAO,KAAK,KAAK,CAAC;IACpB,EAAE,OAAO,GAAG;QACV,sEAAsE;QACtE,uFAAuF;QACvF,IAAI,SAAS,IAAI;YACf,OAAO;QACT;QACA,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,GAAG;IACvD;AACF;AAGO,MAAM,UAAU;IACrB,OAAO,OAAO,OAAe;QAC3B,OAAO,WAAyB,eAAe;YAC7C,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAO;YAAS;QACzC;IACF;IAEA,UAAU,OAAO,MAAc,OAAe;QAC5C,OAAO,WAAyB,kBAAkB;YAChD,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;gBAAE;gBAAM;gBAAO;YAAS;QAC/C;IACF;IAEA,QAAQ;QACN,OAAO,WAAiB,gBAAgB;YACtC,QAAQ;QACV;IACF;IAEA,gBAAgB;QACd,OAAO,WAAiB,YAAY,CAAC;IACvC;AACF;AAGO,MAAM,WAAW;IACtB,QAAQ;QACN,OAAO,WAAmB;IAC5B;IAEA,QAAQ,OAAO;QACb,OAAO,WAAiB,UAAU;YAChC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;IAEA,MAAM,OAAO;QACX,OAAO,WAAiB,eAAe;YACrC,QAAQ;YACR,MAAM,KAAK,SAAS,CAAC;QACvB;IACF;AACF","debugId":null}},
    {"offset": {"line": 186, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mkboa/AI_Dev/Polling-App-Project/polling-app-project/src/components/polls/poll-card.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState, useEffect } from \"react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\n\ninterface PollOption {\n  id: string\n  text: string\n  votes: number\n}\n\ninterface Poll {\n  id: string\n  title: string\n  description: string\n  options: PollOption[]\n  totalVotes: number\n  createdAt: string\n  createdBy: string\n  endsAt?: string\n}\n\nimport { pollsApi } from \"@/lib/api\"\n\nimport { useAuth } from \"@/context/AuthContext\";\n\nexport function PollCard({ poll }: { poll: Poll }) {\n  const [selectedOption, setSelectedOption] = useState<string | null>(null)\n  const [hasVoted, setHasVoted] = useState(false)\n  const [error, setError] = useState<string | null>(null)\n  const [formattedEndsAt, setFormattedEndsAt] = useState(\"\")\n  const { session } = useAuth()\n\n  useEffect(() => {\n    if (poll.endsAt) {\n      setFormattedEndsAt(new Date(poll.endsAt).toLocaleString());\n    }\n  }, [poll.endsAt]);\n\n  const isExpired = poll.endsAt && new Date(poll.endsAt) < new Date();\n\n  const handleVote = async () => {\n    if (selectedOption && !isExpired && session) {\n      try {\n        const result = await pollsApi.vote(\n          { pollId: poll.id, optionId: selectedOption }\n        )\n        if (result) {\n          setHasVoted(true)\n          // Update poll data locally if needed\n        } else {\n          setError(\"Failed to vote. Please try again.\")\n        }\n      } catch (error: any) { \n        setError(error.message || \"An unexpected error occurred.\")\n      }\n    }\n  }\n\n  const getVotePercentage = (votes: number) => {\n    if (poll.totalVotes === 0) return 0\n    return Math.round((votes / poll.totalVotes) * 100)\n  }\n\n  return (\n    <Card className=\"w-full\">\n      <CardHeader>\n        <CardTitle className=\"flex items-center justify-between\">\n          {poll.title}\n          <span className={`text-xs px-2 py-1 rounded-full ${\n            !isExpired ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\n          }`}>\n            {!isExpired ? 'Active' : 'Closed'}\n          </span>\n        </CardTitle>\n        <CardDescription>{poll.description}</CardDescription>\n        <div className=\"text-xs text-gray-500\">\n          Created by {poll.createdBy} • {new Date(poll.createdAt).toLocaleDateString()}\n          {formattedEndsAt && (\n            <span> • Closes on {formattedEndsAt}</span>\n          )}\n        </div>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {error && (\n          <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n            <span className=\"block sm:inline\">{error}</span>\n          </div>\n        )}\n        <div className=\"space-y-2\">\n          {poll.options.map((option) => (\n            <div key={option.id} className=\"relative\">\n              <button\n                onClick={() => !hasVoted && !isExpired && setSelectedOption(option.id)}\n                className={`w-full p-3 text-left border rounded-lg transition-colors ${\n                  selectedOption === option.id\n                    ? 'border-blue-500 bg-blue-50'\n                    : 'border-gray-200 hover:border-gray-300'\n                } ${hasVoted || isExpired ? 'cursor-default' : 'cursor-pointer'}`}\n                disabled={hasVoted || isExpired}\n              >\n                <div className=\"flex justify-between items-center\">\n                  <span>{option.text}</span>\n                  <span className=\"text-sm font-medium\">\n                    {option.votes} votes ({getVotePercentage(option.votes)}%)\n                  </span>\n                </div>\n                {(hasVoted || isExpired) && (\n                  <div className=\"mt-2 h-2 bg-gray-200 rounded-full overflow-hidden\">\n                    <div\n                      className=\"h-full bg-blue-500 transition-all duration-300\"\n                      style={{ width: `${getVotePercentage(option.votes)}%` }}\n                    />\n                  </div>\n                )}\n              </button>\n            </div>\n          ))}\n        </div>\n        \n        {!hasVoted && !isExpired && selectedOption && (\n          <Button onClick={handleVote} className=\"w-full\">\n            Vote\n          </Button>\n        )}\n        \n        {hasVoted && (\n          <div className=\"text-center text-sm text-green-600 font-medium\">\n            ✓ You have voted on this poll\n          </div>\n        )}\n\n        {isExpired && !hasVoted && (\n          <div className=\"text-center text-sm text-red-600 font-medium\">\n            This poll has closed and is no longer accepting votes.\n          </div>\n        )}\n        \n        <div className=\"text-center text-sm text-gray-500\">\n          Total votes: {poll.totalVotes}\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}